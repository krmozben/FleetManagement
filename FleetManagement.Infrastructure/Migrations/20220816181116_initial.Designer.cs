// <auto-generated />
using System;
using FleetManagement.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FleetManagement.Infrastructure.Migrations
{
    [DbContext(typeof(FleetDbContext))]
    [Migration("20220816181116_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FleetManagement.Domain.ShipmentAggregate.DeliveryPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DeliveryPoints");
                });

            modelBuilder.Entity("FleetManagement.Domain.ShipmentAggregate.PackageSack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("PackageId")
                        .HasColumnType("int");

                    b.Property<int?>("SackId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PackageId")
                        .IsUnique()
                        .HasFilter("[PackageId] IS NOT NULL");

                    b.HasIndex("SackId");

                    b.ToTable("PackageSacks");
                });

            modelBuilder.Entity("FleetManagement.Domain.ShipmentAggregate.Shipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeliveryPointId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ShipmentState")
                        .HasColumnType("int");

                    b.Property<int>("ShipmentType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryPointId");

                    b.ToTable("Shipments");
                });

            modelBuilder.Entity("FleetManagement.Domain.ShipmentAggregate.PackageSack", b =>
                {
                    b.HasOne("FleetManagement.Domain.ShipmentAggregate.Shipment", "Package")
                        .WithOne("PackageSack")
                        .HasForeignKey("FleetManagement.Domain.ShipmentAggregate.PackageSack", "PackageId");

                    b.HasOne("FleetManagement.Domain.ShipmentAggregate.Shipment", "Sack")
                        .WithMany()
                        .HasForeignKey("SackId");

                    b.Navigation("Package");

                    b.Navigation("Sack");
                });

            modelBuilder.Entity("FleetManagement.Domain.ShipmentAggregate.Shipment", b =>
                {
                    b.HasOne("FleetManagement.Domain.ShipmentAggregate.DeliveryPoint", "DeliveryPoint")
                        .WithMany()
                        .HasForeignKey("DeliveryPointId");

                    b.OwnsOne("FleetManagement.Domain.ShipmentAggregate.Desi", "Desi", b1 =>
                        {
                            b1.Property<int>("ShipmentId")
                                .HasColumnType("int");

                            b1.Property<int?>("Value")
                                .HasColumnType("int")
                                .HasColumnName("Desi");

                            b1.HasKey("ShipmentId");

                            b1.ToTable("Shipments");

                            b1.WithOwner()
                                .HasForeignKey("ShipmentId");
                        });

                    b.Navigation("DeliveryPoint");

                    b.Navigation("Desi");
                });

            modelBuilder.Entity("FleetManagement.Domain.ShipmentAggregate.Shipment", b =>
                {
                    b.Navigation("PackageSack");
                });
#pragma warning restore 612, 618
        }
    }
}
